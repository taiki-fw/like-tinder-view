{"version":3,"sources":["img/model-1.jpg","img/model-2.jpg","img/model-3.jpg","components/ActionBtn.jsx","serviceWorker.js","components/Person.jsx","People.jsx","components/PersonDetail.jsx","index.js"],"names":["module","exports","ActionBtn","styled","button","ShowUserInfoBtn","NopeBtn","props","onClick","e","clickFunc","name","icon","faTimes","size","color","LikeBtn","faHeart","JumpToUserInfo","id","to","process","faUserAlt","Boolean","window","location","hostname","match","Person","React","forwardRef","ref","imgPath","age","animationTimePerMillisecond","PersonStyled","UserImg","alt","src","UserInfo","span","img","div","peopleData","model1","job","distance","model2","model3","PeopleStyle","UserActionsStyle","People","state","people","firstPeople","createRef","handleAction","bind","isLikeAction","currentTarget","randomNum","Math","floor","random","length","randomPeople","newItem","this","slice","concat","obj","current","classList","add","setTimeout","remove","setState","item","map","index","key","displayedPersonId","Component","PersonDetailStyle","PersonDetail","params","parseInt","person","filter","p","styles","app","height","backgroundColor","header","margin","actionDiv","width","ReactDOM","render","style","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3ac094b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/model-1.f16bcd6b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/model-2.34e6604d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/model-3.2ff903bd.jpg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart, faTimes, faUserAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nconst ActionBtn = styled.button`\n  display: inline-block;\n  width: 48.75px;\n  height: 48.75px;\n  background-color: white;\n  outline: none;\n  border: none;\n  border-radius: 50%;\n`;\n\nconst ShowUserInfoBtn = styled(ActionBtn)`\n  margin: 0 2em;\n`;\n\nconst NopeBtn = props => (\n  <ActionBtn onClick={e => props.clickFunc(e)} name=\"nope\">\n    <FontAwesomeIcon icon={faTimes} size=\"2x\" color=\"orangered\" />\n  </ActionBtn>\n);\n\nconst LikeBtn = props => (\n  <ActionBtn onClick={e => props.clickFunc(e)} name=\"like\">\n    <FontAwesomeIcon icon={faHeart} size=\"2x\" color=\"aquamarine\" />\n  </ActionBtn>\n);\n\nconst JumpToUserInfo = ({ id }) => (\n  <ShowUserInfoBtn>\n    <Link to={`${process.env.PUBLIC_URL}/user/${id}`}>\n      <FontAwesomeIcon icon={faUserAlt} size=\"2x\" color=\"deepskyblue\" />\n    </Link>\n  </ShowUserInfoBtn>\n);\n\nexport { NopeBtn, LikeBtn, JumpToUserInfo };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Person = React.forwardRef(\n  ({ imgPath, name, age, animationTimePerMillisecond }, ref) => (\n    <PersonStyled\n      ref={ref}\n      animationTimePerMillisecond={animationTimePerMillisecond}\n    >\n      <UserImg alt={`${name}さんの画像`} src={imgPath} />\n      <UserInfo>\n        <strong>{name}</strong>,{age}\n      </UserInfo>\n    </PersonStyled>\n  )\n);\n\nconst UserInfo = styled.span`\n  text-align: left;\n  display: block;\n  width: 100%;\n  padding: 10px;\n\n  & > p {\n    margin-top: 1em;\n  }\n`;\n\nconst UserImg = styled.img`\n  width: 100%;\n  height: 265px;\n`;\n\nconst PersonStyled = styled.div`\n  @keyframes likeBtn {\n    0% {\n      transform: scale(1) rotateZ(0deg);\n      left: 0;\n    }\n    30% {\n      transform: scale(1.05) rotateZ(0deg);\n      left: 0;\n    }\n    100% {\n      transform: rotateZ(45deg);\n      left: 115%; /* 要素width 100% + 空白の部分width 15% = 115% */\n    }\n  }\n\n  @keyframes nopeBtn {\n    0% {\n      transform: scale(1) rotateZ(360deg);\n      right: 0;\n    }\n    30% {\n      transform: scale(1.05) rotateZ(360deg);\n      right: 0;\n    }\n    100% {\n      transform: rotateZ(315deg);\n      right: 115%; /* 要素width 100% + 空白の部分width 15% = 115% */\n    }\n  }\n\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 265px;\n  margin: 0 auto;\n  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.2);\n  opacity: 1;\n\n  &.like {\n    animation: likeBtn ${props => props.animationTimePerMillisecond || 0}ms\n      linear;\n  }\n\n  &.nope {\n    animation: nopeBtn ${props => props.animationTimePerMillisecond || 0}ms\n      linear;\n  }\n\n  &:first-child {\n    z-index: 5;\n  }\n\n  &:nth-child(2) {\n    z-index: 4;\n    top: 7px;\n    transform: scale(0.98);\n  }\n\n  &:nth-child(3) {\n    z-index: 3;\n    top: 14px;\n    transform: scale(0.96);\n  }\n\n  &:nth-child(n + 4) {\n    z-index: 2;\n  }\n\n  & > img {\n    height: 100%;\n  }\n\n  & > span {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    background-color: white;\n  }\n`;\n\nexport { Person, UserInfo, UserImg };\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Person } from \"./components/Person\";\nimport { NopeBtn, LikeBtn, JumpToUserInfo } from \"./components/ActionBtn\";\n\nimport model1 from \"./img/model-1.jpg\";\nimport model2 from \"./img/model-2.jpg\";\nimport model3 from \"./img/model-3.jpg\";\n\nexport const peopleData = [\n  {\n    id: 1,\n    imgPath: model1,\n    name: \"Lara\",\n    age: \"22\",\n    job: \"freelance\",\n    distance: \"22cm\"\n  },\n  {\n    id: 2,\n    imgPath: model2,\n    name: \"Sandra\",\n    age: \"18\",\n    job: \"students\",\n    distance: \"22m\"\n  },\n  {\n    id: 3,\n    imgPath: model3,\n    name: \"Emma\",\n    age: \"24\",\n    job: \"nurse\",\n    distance: \"22km\"\n  }\n];\n\n// nope,likeボタンを押した際にカードの移動アニメーション時間\nconst animationTime = 600;\n\nconst PeopleStyle = styled.div`\n  position: relative;\n  z-index: 1;\n  height: 256px;\n  width: 85%;\n  margin: 0 auto;\n`;\n\nconst UserActionsStyle = styled.div`\n  width: 85%;\n  margin: 40px auto 0;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n`;\n\nexport default class People extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      people: [\n        {\n          id: 1,\n          imgPath: model1,\n          name: \"Lara\",\n          age: \"22\",\n          job: \"freelance\",\n          distance: \"22cm\"\n        },\n        {\n          id: 2,\n          imgPath: model2,\n          name: \"Sandra\",\n          age: \"18\",\n          job: \"students\",\n          distance: \"22m\"\n        },\n        {\n          id: 3,\n          imgPath: model3,\n          name: \"Emma\",\n          age: \"24\",\n          job: \"nurse\",\n          distance: \"22km\"\n        }\n      ]\n    };\n    this.firstPeople = React.createRef();\n    this.handleAction = this.handleAction.bind(this);\n  }\n\n  handleAction(e) {\n    const isLikeAction = e.currentTarget.name; // 付与するclassの名前の判別\n\n    // randomなpeopleの選出\n    const randomNum = Math.floor(Math.random() * peopleData.length);\n    const randomPeople = peopleData[randomNum];\n\n    // 表示されていたカードを削除し、ランダムにデータを追加した新しいpeopleデータ\n    const newItem = this.state.people.slice(1).concat(randomPeople);\n\n    const obj = this.firstPeople.current; // 表示されているpeopleのnode\n    obj.classList.add(isLikeAction);\n    setTimeout(() => {\n      obj.classList.remove(isLikeAction);\n      this.setState({\n        people: newItem\n      });\n    }, animationTime);\n  }\n\n  render() {\n    const item = this.state.people.map((item, index) => (\n      <Person\n        ref={index === 0 ? this.firstPeople : \"\"}\n        animationTimePerMillisecond={animationTime}\n        key={index}\n        imgPath={item.imgPath}\n        name={item.name}\n        age={item.age}\n      />\n    ));\n    const displayedPersonId = this.state.people[0].id;\n    return (\n      <>\n        <PeopleStyle>{item}</PeopleStyle>\n        <UserActionsStyle>\n          <NopeBtn clickFunc={this.handleAction} />\n          <JumpToUserInfo id={displayedPersonId} />\n          <LikeBtn clickFunc={this.handleAction} />\n        </UserActionsStyle>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { peopleData } from \"../People\";\nimport { UserImg, UserInfo } from \"./Person\";\n\nconst PersonDetail = props => {\n  const { params } = props.match;\n  const id = parseInt(params.id, 10);\n  const person = peopleData.filter(p => p.id === id)[0];\n  return (\n    <PersonDetailStyle>\n      <UserImg alt={`${person.name}さんの画像`} src={person.imgPath} />\n      <UserInfo>\n        <strong>{person.name}</strong>,{person.age}\n        <p>{person.job}</p>\n        <p>{person.distance}</p>\n      </UserInfo>\n      <Link to={`${process.env.PUBLIC_URL}/`}>Home</Link>\n    </PersonDetailStyle>\n  );\n};\n\nconst PersonDetailStyle = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  text-align: center;\n  background-color: white;\n\n  & a {\n    display: inline-block;\n    color: black;\n    text-decoration: none;\n  }\n`;\n\nexport default PersonDetail;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\n\nimport { UserActions } from \"./components/ActionBtn\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport People from \"./People\";\nimport PersonDetail from \"./components/PersonDetail\";\n\nconst App = () => (\n  <div style={styles.app}>\n    <header style={styles.header}></header>\n    <Router>\n      <Switch>\n        <Route exact path={`${process.env.PUBLIC_URL}/`} component={People} />\n        <Route\n          path={`${process.env.PUBLIC_URL}/user/:id`}\n          component={PersonDetail}\n        />\n      </Switch>\n    </Router>\n    {/* <UserActions /> */}\n  </div>\n);\n\nconst styles = {\n  app: {\n    height: \"100vh\",\n    backgroundColor: \"aliceblue\"\n  },\n  header: {\n    backgroundColor: \"#f6f6f6\",\n    height: \"50px\",\n    margin: \"0 0 1em\"\n  },\n  actionDiv: {\n    width: \"85%\",\n    margin: \"25px auto 0\"\n  }\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}